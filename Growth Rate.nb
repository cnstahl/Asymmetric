(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     49589,       1104]
NotebookOptionsPosition[     48068,       1045]
NotebookOutlinePosition[     48420,       1061]
CellTagsIndexPosition[     48377,       1058]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[AliasDelimiter]"], "Input",
 CellChangeTimes->{3.75191704620018*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"n", ",", "m"}], "]"}], "\[Equal]", " ", 
      RowBox[{
       RowBox[{"a", "[", 
        RowBox[{
         RowBox[{"n", "-", "1"}], ",", "m"}], "]"}], "+", "1", "+", "m", "-", 
       
       RowBox[{"2", "*", 
        RowBox[{
         RowBox[{"(", 
          FractionBox[
           RowBox[{"1", "+", "m"}], "2"], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"n", "+", "1"}], ")"}]}]}]}]}], ",", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"0", ",", "m"}], "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"a", "[", 
    RowBox[{"n", ",", "m"}], "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.7331876510246553`*^9, 3.733187733293144*^9}, {
  3.733187770658629*^9, 3.7331877855447903`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"n", ",", "m"}], "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox["2", 
       RowBox[{"-", "n"}]], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["2", "n"], "+", 
        RowBox[{
         SuperscriptBox["2", "n"], " ", "m"}], "-", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "m"}], ")"}], "n"], "-", 
        RowBox[{"m", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "m"}], ")"}], "n"]}], "-", 
        RowBox[{
         SuperscriptBox["2", "n"], " ", "n"}], "+", 
        RowBox[{
         SuperscriptBox["2", "n"], " ", "m", " ", "n"}]}], ")"}]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "m"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.733187657728237*^9, {3.733187717100896*^9, 3.733187733805689*^9}, 
   3.733187786444755*^9, 3.751923432571773*^9, 3.7535818086147537`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"-", "n"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "m"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["2", "n"], "+", 
      RowBox[{
       SuperscriptBox["2", "n"], " ", "m"}], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "m"}], ")"}], "n"], "-", 
      RowBox[{"m", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "m"}], ")"}], "n"]}], "-", 
      RowBox[{
       SuperscriptBox["2", "n"], " ", "n"}], "+", 
      RowBox[{
       SuperscriptBox["2", "n"], " ", "m", " ", "n"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "m"}]]}]], "Input",
 CellChangeTimes->{{3.733187792915409*^9, 3.733187807049717*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"a", "[", 
   RowBox[{"n", ",", "m"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.733187812618196*^9, 3.7331878368056917`*^9}, {
  3.733188467852434*^9, 3.7331884682309732`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "m"}], ")"}], 
       RowBox[{"2", "+", "n"}]]}], "+", 
     RowBox[{
      SuperscriptBox["2", "n"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "m"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "m", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "n"}]}], ")"}]}]}], 
    ")"}]}], 
  RowBox[{
   RowBox[{"-", "1"}], "+", "m"}]]], "Output",
 CellChangeTimes->{{3.733187815601943*^9, 3.733187837026297*^9}, 
   3.733188468918229*^9, 3.751923441834206*^9, 3.753581818314994*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "[", 
  RowBox[{"1", ",", "m"}], "]"}]], "Input",
 CellChangeTimes->{{3.733188860499628*^9, 3.73318886609953*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "m"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     RowBox[{"3", " ", "m"}], "-", 
     RowBox[{"m", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "m"}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.7331888664217653`*^9, 3.751923466471139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "m"}], ")"}], "^", "3"}], "/", 
   RowBox[{"(", 
    RowBox[{"1", "-", "m"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.73318892483634*^9, 3.733188938086059*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "m"}], ")"}], "3"], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "m"}]]}]], "Output",
 CellChangeTimes->{{3.733188932065258*^9, 3.733188938365003*^9}, 
   3.751923469818864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"n", ",", "m"}], "]"}], "/", "n"}], ",", 
   RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7331898563659267`*^9, 3.7331898963690968`*^9}, {
  3.733189985976368*^9, 3.733189994805769*^9}}],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "n"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", "m"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["2", "n"], "+", 
       RowBox[{
        SuperscriptBox["2", "n"], " ", "m"}], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "m"}], ")"}], "n"], "-", 
       RowBox[{"m", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "m"}], ")"}], "n"]}], "-", 
       RowBox[{
        SuperscriptBox["2", "n"], " ", "n"}], "+", 
       RowBox[{
        SuperscriptBox["2", "n"], " ", "m", " ", "n"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "m"}], ")"}], " ", "n"}]], ",", 
   RowBox[{"n", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.733189861976186*^9, 3.7331898995560007`*^9, 
  3.7331899975428867`*^9, 3.7519234799966793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"1", ",", "m"}], "]"}], "/", "1"}], ",", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"2", ",", "m"}], "]"}], "/", "2"}], ",", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"3", ",", "m"}], "]"}], "/", "3"}], ",", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"4", ",", "m"}], "]"}], "/", "4"}], ",", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"5", ",", "m"}], "]"}], "/", "5"}], ",", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"6", ",", "m"}], "]"}], "/", "6"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"m", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.733189910865533*^9, 3.7331899570808887`*^9}, {
  3.7331900295667477`*^9, 3.73319003414281*^9}, {3.753581826680751*^9, 
  3.753581879851242*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwt2Hk0lO37AHBtr0LSppQ92bKWFL1ckfAqQlkqWVooexIpW8iSEpLsEsnW
2PfltpvsgxBmnqwhZkgKWX7395zfX3M+59xnnmvuubYZgZsO+nc2MzEx7dnE
xPS/VyngnN7YYKD8c17N1VN3lB2WjwQurzDQX+PXNy8cVIOcfFnhhUUG4grW
eRXMeQWOi2rfnPjBQD06zKnae2/Dqd1+A619DOS/7VDeTzZnODs63xydzUDN
rKEK2kx+oB/QlnnCjIHO3RbyZvn+Glw7/Oysqujo8BkBsaCCZOjpYZ2usZhF
sao3Q95yFgBPtcO+U9wzqMb1++whxUootKnftos6jTaflFt/N14L5i9k5776
TKFeJ+3OSf0mWAp/EohgEn3LOH+vDlogmZ3GFTU8gaonzGZlNDogTkvWqTto
HPmaiA6QvSngY2vxSOy/MZSgdHhs7Eg3PNmS4eo0O4KskKLuWlsPWHh3CPWm
DSODpaYMAZVeeFM5HhVn/Q2RV1LlmSL6oIwQZcsSpKEy/o3Fwu/9cITjrOqV
hEG0sECJdWQZgDzxQOuR0X7kHmFtsSg6CERDLr+8fC8ysWZyUD86BOMSb46j
om5kc174StnvIdjtmS4vtYmCPBxzi7IrqeBfJErm+NOJVgWkf5hWU2GF/vHq
wkwnulZr689WR4URs1T3kv5OlNkhMn+TTIU8leRa1ZxOVMUd/3a1iwr62+J1
jMw6UbC3n+jodyqIcAm0MT3pQOX26tc8OGggIc+Q+LDQivzHI9fGTWhgKeXl
VUptReYUkVwzMxokCu/qamtqRQu6J/36LGiw54C06+/YVnSFtTGwxpIGf/7Y
12iotaI/tlWsXo40qC2lG0xHtKCWUZblRF8aGCvRPaXlm1F04p77bmk0CD/p
STnH34z4tsjvK86gQYsku5AxSzO6tfKl92cWDZR5pT570z4jkZTgstu5NDiy
Ybe3y/8zCh9r+ytbRgN69exH5z4ymjlIuuPUQgNftdnO0kdNqP0Stff5DH6+
5swluVtNqNNv9z5fOg2YtH+0k7SbkNHcQR+3ORq4G0y1Jgs2ITabpDnzXzRw
sRwnv2xtRAx61IFDqzS4G0ittuBvRKUygi9PshJwsbUtZwe5HmnHxXPuFiXg
eWertF9ePXr//rR9hxgB5J4W0npcPfIiUn8HHyPgPPVz1sL9ekRdXY3ekCJA
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

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
fEVCbuv9D6hgYlI=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
pKg=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Pwu8//0/PWSSUA==
      "]]}, 
    {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
2eL/v5/g1/fVOwOGvXb/D6CRNAw=
      "]]}, 
    {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJwt2HlUjV8XB/CblCQRiahISkga5KeSLxJJoSRSUiGkkmgylAZEaZIUkUaU
JqFRt9IsTXdo1Fwa7tMtpEF4j7Xev+76rLvPfs5z1jn77PVIW180OjOLRqOt
4KHR/v0qQmzo718u/Wknva5w8Mz2i1MyflPTXPrSLPXFUeK7kZ6pLPd9nEtf
FXK/RUHcGCryBtb9w1w6bSaFP3jZafwn4ttS3cil3xCWKXBZegU7esaqItO4
9PJmlyijJb4wuvM5WfUkly5cec5TUCQMrrW+9mcLRujXgql7JwTiwWTOGyqy
oui2Kw4kNHx6C8nCi6L/SXDoW3ctvmFeUYB3F0r4FnwZonse116qgxJYBiiP
NnsP0lnspl0JrpWYDL3mR8cAXW3Jc4ccvRrECbeLR3T100uUe6Nv5dUjSk/Z
iXG3j75Nau7nAS0mvO2s3Nbt66UblI2l5d5n4xpvkqsT1U2/aT9hV8nfDKub
tWvYL7voXTFGPr/1W/HwQ19ElG0n/XxJ/WizxxfkdsgLvV7dTnfLKinPYnVA
ZuGOXcbPWunCezKtP8104s16P9vuniZ6xM5fB7VXdqOjNGPVli1seidNSMVA
rQd9Cg9V6O8ZdGnxjrpU5V6IeLzaoshTTxcVm/q7SbMPClu4Cgnfq+lTrntG
Hq7vh89uqi7HrZyu8DjJf1zmK5YYpwabLi2m39+oppQ2fwBvfpYuqFiTS6d9
37vzS9sAElr77g/6ptKvL4u+7ZM+iBOGEm9bT4XRz3xxCa06N4QcwWusYucH
qBzIopUvGIZaN4+U17E0ZO84ka/4dhgyo3lTGsU5yFmro352GwfXP2v7/qBy
EOxR1R64nQN20ifhVPFcWL27rPhuBwf3zrTKSF/KhbTw2qrfuzkYbZk2mLMq
D12v8no9DDgoKFWPZdzIh0n0ftUdFhwcf5KlZ6dOx4cNWiF5Hhzsi2v+fOBY
MZzX2vq45pHxt1JtSu2LcaQY0lofOIg45/NX06cYJo+ijXnoHAxs3Ki8LrUY
IvR291vFHPhl3wzjnf0RgXXOadcrOaj4vNYsO+0jQu+rH5Rr5GDvpPOA9JxS
hPWbRViPcTDSoucVIVGK18+S2qa+cRD+YeXyBSql6FZbnxD0g4N+78r9M+al
uOTtU/h+goPb8yXT2G9KIVY9R+T7bw7KVpc4+1uUoTLj5xMZQQo6Bot4x9+V
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
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 0.9282577345739877}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.753581880432934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"a", "[", 
   RowBox[{"5", ",", "ms"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.733265770397204*^9, 3.733265770565812*^9}, {
  3.7332658565487833`*^9, 3.733265857012395*^9}, {3.733265937029265*^9, 
  3.733265937440896*^9}, {3.733265994937442*^9, 3.733265997910647*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "32"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "ms"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "ms"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"129", "+", 
    RowBox[{"ms", " ", 
     RowBox[{"(", 
      RowBox[{"72", "+", 
       RowBox[{"ms", " ", 
        RowBox[{"(", 
         RowBox[{"30", "+", 
          RowBox[{"ms", " ", 
           RowBox[{"(", 
            RowBox[{"8", "+", "ms"}], ")"}]}]}], ")"}]}]}], ")"}]}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.7332657710427322`*^9, 3.7332657807092133`*^9}, 
   3.7332658572111893`*^9, 3.733265938035832*^9, 3.733265998122102*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"n", ",", "s"}], "]"}], "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "s"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}]}]}], "-", 
     RowBox[{"n", 
      RowBox[{"(", 
       RowBox[{"1", "-", "s"}], ")"}]}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"1", "+", "s"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.75192352375334*^9, 3.75192358768821*^9}, {
  3.7519236497812567`*^9, 3.751923669931486*^9}, {3.7519237153746367`*^9, 
  3.751923719997147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", "n"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "s"}], ")"}], "n"]}]}]], "Output",
 CellChangeTimes->{{3.751923577230225*^9, 3.751923595751973*^9}, {
   3.7519236540363293`*^9, 3.751923670510633*^9}, 3.751923720401347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"n", ",", "s"}], "]"}], ",", "s"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.751923847739769*^9, 3.751923925405819*^9}, {
  3.7519240055404377`*^9, 3.7519240060245047`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"-", "n"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "s"}], ")"}], 
       RowBox[{"1", "+", "n"}]], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", "n", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "n"}], ")"}], " ", "s"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["2", "n"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "s"}], ")"}], "2"]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "s"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "s"}], ")"}]}]}], ")"}]}]}], ")"}]}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.7519238526520567`*^9, 3.751923941183248*^9}, 
   3.751924006865848*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Limit", "[", 
   RowBox[{"a", ",", 
    RowBox[{"s", "\[Rule]", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.751923934954288*^9, 3.751923938868925*^9}, {
  3.75192401111452*^9, 3.751924046514422*^9}, {3.751924076742227*^9, 
  3.7519240857489347`*^9}, {3.751924183638805*^9, 3.7519241877562838`*^9}, {
  3.751924254055025*^9, 3.751924337722925*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", "n", " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "n"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.751924073617608*^9, 3.751924086246214*^9}, 
   3.7519241881205797`*^9, {3.7519242881166763`*^9, 3.751924338456687*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["s"], "Input",
 CellChangeTimes->{3.751924291771082*^9}],

Cell[BoxData["s"], "Output",
 CellChangeTimes->{3.751924292255061*^9}]
}, Open  ]]
},
WindowSize->{808, 623},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 84, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[667, 25, 861, 26, 49, "Input"],
Cell[1531, 53, 1064, 32, 52, "Output"]
}, Open  ]],
Cell[2610, 88, 864, 28, 53, "Input"],
Cell[CellGroupData[{
Cell[3499, 120, 236, 5, 32, "Input"],
Cell[3738, 127, 783, 26, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4558, 158, 142, 3, 32, "Input"],
Cell[4703, 163, 466, 16, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5206, 184, 277, 8, 32, "Input"],
Cell[5486, 194, 278, 9, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5801, 208, 317, 8, 32, "Input"],
Cell[6121, 218, 1012, 31, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7170, 254, 932, 28, 54, "Input"],
Cell[8105, 284, 35465, 603, 275, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43607, 892, 330, 6, 32, "Input"],
Cell[43940, 900, 689, 22, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44666, 927, 655, 20, 32, "Input"],
Cell[45324, 949, 352, 10, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45713, 964, 329, 8, 32, "Input"],
Cell[46045, 974, 1085, 37, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47167, 1016, 414, 8, 32, "Input"],
Cell[47584, 1026, 289, 7, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47910, 1038, 69, 1, 32, "Input"],
Cell[47982, 1041, 70, 1, 32, "Output"]
}, Open  ]]
}
]
*)

