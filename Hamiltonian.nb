(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    447218,       8551]
NotebookOptionsPosition[    443902,       8437]
NotebookOutlinePosition[    444254,       8453]
CellTagsIndexPosition[    444211,       8450]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"Constructing", " ", "Hamiltonian"}], 
   "                              ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}]}]], "Input",
 CellChangeTimes->{{3.726429970146503*^9, 3.726430040748259*^9}, {
  3.726687439199017*^9, 3.726687440569789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Unit", "[", "H_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"MatrixExp", "[", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], "*", "H"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.726426211335229*^9, 3.7264263094489183`*^9}, {
  3.726429955873865*^9, 3.7264299629935303`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"S", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "    ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "    ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "    ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eye", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eye2", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"eye", ",", "eye"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.726258381350498*^9, 3.726258431142825*^9}, {
   3.726258484655253*^9, 3.7262585009981213`*^9}, 3.726258579482654*^9, {
   3.726262368815929*^9, 3.72626236893407*^9}, {3.726262427701*^9, 
   3.726262450810626*^9}, {3.726431987277639*^9, 3.726432006068304*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U", " ", "=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"S", ",", "eye"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"eye", ",", "S"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"U", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.726258433968445*^9, 3.7262584376915913`*^9}, {
  3.726258564240797*^9, 3.726258716323174*^9}, {3.72626226278793*^9, 
  3.726262272069045*^9}, {3.7262623438520107`*^9, 3.726262354416885*^9}, {
  3.726262384600779*^9, 3.726262406529496*^9}, {3.726262456413064*^9, 
  3.726262468477597*^9}, {3.730206632992745*^9, 3.730206637545747*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7262624689317827`*^9, {3.7268501839968433`*^9, 3.726850190984087*^9}, 
   3.727012109335477*^9, 3.7302062717854443`*^9, 3.730206400471467*^9, {
   3.730206634377792*^9, 3.7302066382437553`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"MatrixLog", "[", "U", "]"}], "*", "\[ImaginaryI]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H", "/", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
     RowBox[{"3", " ", 
      SqrtBox["3"]}]], ")"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.726262387589119*^9, 3.7262624151322727`*^9}, {
  3.726262472624405*^9, 3.726262505207951*^9}, {3.7262625358629427`*^9, 
  3.726262560241398*^9}, {3.726426299296678*^9, 3.7264263048716497`*^9}, {
  3.726850169331583*^9, 3.726850170542007*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "1", "0"},
     {"0", "1", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}], "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.726262387937879*^9, 3.7262624248827953`*^9}, {
   3.726262476942047*^9, 3.726262506197967*^9}, 3.7262625607282953`*^9, 
   3.726426312034988*^9, {3.7268501733846827`*^9, 3.726850193960822*^9}, 
   3.727012112822101*^9, 3.730206275181818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unit", "[", "H", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.726262531420837*^9, 3.7262625326944523`*^9}, {
  3.726262567947956*^9, 3.7262626210674753`*^9}, {3.726426324842935*^9, 
  3.726426331593069*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.7302063223011093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U2", " ", "=", " ", "S"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U2", ".", "U2"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.726258433968445*^9, 3.7262584376915913`*^9}, {
  3.726258564240797*^9, 3.726258716323174*^9}, {3.72626226278793*^9, 
  3.726262272069045*^9}, {3.7262623438520107`*^9, 3.726262354416885*^9}, {
  3.726262384600779*^9, 3.726262406529496*^9}, {3.726262456413064*^9, 
  3.726262468477597*^9}, {3.730206254029599*^9, 3.730206261012642*^9}, {
  3.73020661791498*^9, 3.7302066269743423`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7262624689317827`*^9, {3.7268501839968433`*^9, 3.726850190984087*^9}, 
   3.727012109335477*^9, 3.730206261884734*^9, 3.730206328552363*^9, 
   3.730206627445305*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H2", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"MatrixLog", "[", "U2", "]"}], "*", "\[ImaginaryI]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H2", "*", 
   RowBox[{"2", "/", "Pi"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.726262387589119*^9, 3.7262624151322727`*^9}, {
  3.726262472624405*^9, 3.726262505207951*^9}, {3.7262625358629427`*^9, 
  3.726262560241398*^9}, {3.726426299296678*^9, 3.7264263048716497`*^9}, {
  3.726850169331583*^9, 3.726850170542007*^9}, {3.730206331692135*^9, 
  3.73020634184868*^9}, {3.730206381477955*^9, 3.730206385517486*^9}, {
  3.7302064228414087`*^9, 3.7302064403967876`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], "1", "0"},
     {"0", "1", 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.726262387937879*^9, 3.7262624248827953`*^9}, {
   3.726262476942047*^9, 3.726262506197967*^9}, 3.7262625607282953`*^9, 
   3.726426312034988*^9, {3.7268501733846827`*^9, 3.726850193960822*^9}, 
   3.727012112822101*^9, 3.730206337197468*^9, {3.730206382637816*^9, 
   3.730206385837839*^9}, {3.730206423185643*^9, 3.730206441252165*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unit", "[", "H2", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.726262531420837*^9, 3.7262625326944523`*^9}, {
   3.726262567947956*^9, 3.7262626210674753`*^9}, {3.726426324842935*^9, 
   3.726426331593069*^9}, 3.730206469613617*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0"},
     {"0", "0", "1", "0"},
     {"0", "1", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.726262568655527*^9, 3.726262621693089*^9}, 
   3.726426332179388*^9, 3.730206470255823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"U4", " ", "=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"S", ",", "eye", ",", " ", "eye"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"eye", ",", "S", ",", "eye"}], "]"}], ".", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"eye", ",", "eye", ",", "S"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"U4", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.726258433968445*^9, 3.7262584376915913`*^9}, {
  3.726258564240797*^9, 3.726258716323174*^9}, {3.72626226278793*^9, 
  3.726262272069045*^9}, {3.7262623438520107`*^9, 3.726262354416885*^9}, {
  3.726262384600779*^9, 3.726262406529496*^9}, {3.726262456413064*^9, 
  3.726262468477597*^9}, {3.7302064777811823`*^9, 3.730206507219419*^9}, {
  3.730206799067553*^9, 3.73020682619769*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7262624689317827`*^9, {3.7268501839968433`*^9, 3.726850190984087*^9}, 
   3.727012109335477*^9, 3.730206508737628*^9, {3.730206802380319*^9, 
   3.7302068270141373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H4", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"MatrixLog", "[", "U4", "]"}], "*", "\[ImaginaryI]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"H4", "*", 
   RowBox[{"4", "/", "Pi"}]}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.726262387589119*^9, 3.7262624151322727`*^9}, {
  3.726262472624405*^9, 3.726262505207951*^9}, {3.7262625358629427`*^9, 
  3.726262560241398*^9}, {3.726426299296678*^9, 3.7264263048716497`*^9}, {
  3.726850169331583*^9, 3.726850170542007*^9}, {3.730206360418714*^9, 
  3.730206367135354*^9}, {3.730206514179269*^9, 3.73020655545807*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", 
      RowBox[{"-", "1"}], "0", "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", 
      RowBox[{"-", "1"}], 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", 
      RowBox[{"-", "1"}], "0", "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", "0", "0", "0", "0", 
      "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", "2"}], "0", "0", "0", "0", "2", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0"},
     {"0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "2", "0", "0", "0", "0", 
      RowBox[{"-", "2"}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", "1"}], "0", "0", "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], "0", 
      RowBox[{"-", "1"}], 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"1", "-", "\[ImaginaryI]"}], "0", "0", "0", 
      RowBox[{"-", "1"}], "0", 
      RowBox[{"1", "+", "\[ImaginaryI]"}], 
      RowBox[{"-", "1"}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.726262387937879*^9, 3.7262624248827953`*^9}, {
   3.726262476942047*^9, 3.726262506197967*^9}, 3.7262625607282953`*^9, 
   3.726426312034988*^9, {3.7268501733846827`*^9, 3.726850193960822*^9}, 
   3.727012112822101*^9, {3.730206360934569*^9, 3.730206369554234*^9}, {
   3.7302065233473663`*^9, 3.7302065559176397`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "H4", "]"}]], "Input",
 CellChangeTimes->{{3.73021384003767*^9, 3.730213844803856*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "\[Pi]"}], ",", 
   RowBox[{"-", "\[Pi]"}], ",", 
   RowBox[{"-", "\[Pi]"}], ",", 
   RowBox[{"-", "\[Pi]"}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "2"]}], ",", 
   RowBox[{"-", 
    FractionBox["\[Pi]", "2"]}], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "2"], ",", 
   FractionBox["\[Pi]", "2"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7302138452820187`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Unit", "[", "H4", "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.726262531420837*^9, 3.7262625326944523`*^9}, {
   3.726262567947956*^9, 3.7262626210674753`*^9}, {3.726426324842935*^9, 
   3.726426331593069*^9}, 3.7302065696067047`*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.726262568655527*^9, 3.726262621693089*^9}, 
   3.726426332179388*^9, 3.7302065698466873`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vec", " ", "=", " ", 
   RowBox[{"Eigenvectors", "[", "H", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", "H", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"Eigenvalues", "[", "H", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", "vec", "]"}], "//", 
  "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.72633944525775*^9, 3.726339459746883*^9}, {
  3.726345978614922*^9, 3.7263460179198513`*^9}, {3.726346834869545*^9, 
  3.726346838348741*^9}, {3.72642561160256*^9, 3.7264256161425953`*^9}, {
  3.7264263700963287`*^9, 3.726426383067692*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "3"]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "3"]}], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "3"], ",", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "3"], ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellChangeTimes->{3.726346838980824*^9, 3.726425617333619*^9, 
  3.72642634614359*^9, 3.72642638373237*^9, 3.72701211534167*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "1"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", "0", "1", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", "0", "1", "0"},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", "0", "1", "0", "0"},
     {"0", "1", "0", "1", "0", "0", "1", "0"},
     {
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"\[ImaginaryI]", " ", 
          SqrtBox["3"]}]}], ")"}]}], "0", "0", "1", "0", "0"},
     {"1", "0", "1", "0", "0", "1", "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.726346838980824*^9, 3.726425617333619*^9, 
  3.72642634614359*^9, 3.72642638373237*^9, 3.727012115351087*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"ConjugateTranspose", "[", "vec", "]"}], ".", "val", ".", "vec"}],
    "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.726346040687727*^9, 3.7263460816026087`*^9}, {
  3.726346954294832*^9, 3.726346978359015*^9}, {3.726347425079667*^9, 
  3.726347463008156*^9}, {3.726425887887617*^9, 3.7264258929609423`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SqrtBox["3"]]}], "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SqrtBox["3"]], "0", "0", "0"},
     {"0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SqrtBox["3"]], "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SqrtBox["3"]]}], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SqrtBox["3"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SqrtBox["3"]]}], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SqrtBox["3"]]}], 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SqrtBox["3"]], "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SqrtBox["3"]]}], "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SqrtBox["3"]], "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       SqrtBox["3"]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        SqrtBox["3"]]}], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.726346057302096*^9, 3.726346082640662*^9}, {
   3.7263469573803883`*^9, 3.726346979063472*^9}, {3.7263474267212553`*^9, 
   3.726347463418592*^9}, 3.72642589970691*^9, 3.72642640026363*^9, 
   3.727012125945094*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plus", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["3"]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"minus", " ", "=", " ", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SqrtBox["3"]}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eplus", " ", "=", " ", 
   RowBox[{"2", "*", 
    RowBox[{"Pi", "/", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Eminus", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "2"}], "*", 
    RowBox[{"Pi", "/", "3"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.72633954908843*^9, 3.726339576161428*^9}, {
  3.726342979573079*^9, 3.726342980715795*^9}, {3.7263430135281277`*^9, 
  3.726343031469078*^9}, {3.726345273007489*^9, 3.726345305937612*^9}, {
  3.72642643801898*^9, 3.726426438909274*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cob", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Sqrt]", "3"}], ",", "0", ",", "0", ",", " ", "0", ",", 
        "         ", "0", ",", "         ", "0", ",", "         ", "0", ",", 
        "         ", "0"}], "}"}], ",", "\[IndentingNewLine]", 
      "             ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "  ", "plus", ",", "         ",
         "0", ",", "minus", ",", "         ", "0"}], "}"}], ",", 
      "\[IndentingNewLine]", "             ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "minus", ",", "         ", "0",
         ",", "plus", ",", "           ", "0"}], "}"}], ",", 
      "\[IndentingNewLine]", "             ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "         ", "0", ",", 
        "         ", "1", ",", "         ", "0", ",", "         ", "1"}], 
       "}"}], ",", "\[IndentingNewLine]", "             ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "1", ",", "0", ",", "0", ",", "         ", "1", ",", 
        "         ", "0", ",", "         ", "1", ",", "         ", "0"}], 
       "}"}], ",", "\[IndentingNewLine]", "             ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "         ", "0", ",", "minus",
         ",", "         ", "0", ",", "  ", "plus"}], "}"}], ",", 
      "\[IndentingNewLine]", "             ", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "1", ",", "0", ",", "         ", "0", ",", "  ", 
        "plus", ",", "         ", "0", ",", "minus"}], "}"}], ",", 
      "\[IndentingNewLine]", "             ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0", ",", 
        RowBox[{"\[Sqrt]", "3"}], ",", "     ", "0", ",", "         ", "0", 
        ",", "         ", "0", ",", "         ", "0"}], "}"}]}], "}"}], "/", 
    RowBox[{"\[Sqrt]", "3"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ener", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "0", ",", "Eplus", ",", "Eplus", ",", 
       "Eminus", ",", "Eminus"}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"ener", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
       "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        "Eminus"}], "}"}], "]"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ener", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.7263430397329807`*^9, 3.726343048530198*^9}, {
  3.7263450530653763`*^9, 3.726345261214982*^9}, {3.726345319068569*^9, 
  3.726345518619404*^9}, {3.7263475050371647`*^9, 3.726347506279234*^9}, {
  3.7264256659494343`*^9, 3.726425793667128*^9}, {3.7264259720161133`*^9, 
  3.726425991285738*^9}, {3.726426030745995*^9, 3.72642603096593*^9}, {
  3.726426119090806*^9, 3.72642613827882*^9}, {3.726426455354566*^9, 
  3.7264264625768423`*^9}, {3.726428256688795*^9, 3.726428261241248*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "3"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "3"], "0", "0"},
     {"0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"]}], "0"},
     {"0", "0", "0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "3"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.726345203124197*^9, {3.726345248050373*^9, 3.7263452617483873`*^9}, 
   3.726345345294218*^9, {3.726345386402954*^9, 3.7263454164056263`*^9}, {
   3.726345452513895*^9, 3.726345469521832*^9}, {3.726345500529663*^9, 
   3.726345519333612*^9}, 3.726347506691807*^9, {3.726425972833724*^9, 
   3.726425992329479*^9}, 3.7264260317692633`*^9, 3.726426138818327*^9, 
   3.726426463682585*^9, 3.726428262617198*^9, 3.727012130139839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"cob", "  ", ".", " ", "ener", ".", " ", 
    RowBox[{"ConjugateTranspose", "[", "cob", "]"}]}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.726345535815027*^9, 3.726345591473031*^9}, {
  3.7263456815875883`*^9, 3.726345718428547*^9}, {3.726346807815597*^9, 
  3.726346811628474*^9}, {3.726425959639374*^9, 3.726425959882854*^9}, {
  3.726425997811817*^9, 3.7264259988721046`*^9}, {3.726426064061594*^9, 
  3.726426068678792*^9}, {3.7264261029510193`*^9, 3.726426105188943*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        RowBox[{"3", " ", 
         SqrtBox["3"]}]]}], "0", "0", "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        RowBox[{"3", " ", 
         SqrtBox["3"]}]]}], "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "0", "0", "0"},
     {"0", "0", "0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        RowBox[{"3", " ", 
         SqrtBox["3"]}]]}], 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "0"},
     {"0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        RowBox[{"3", " ", 
         SqrtBox["3"]}]]}], "0", "0", "0", "0", "0"},
     {"0", "0", "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        RowBox[{"3", " ", 
         SqrtBox["3"]}]]}], "0"},
     {"0", "0", "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
        RowBox[{"3", " ", 
         SqrtBox["3"]}]]}], "0", 
      FractionBox[
       RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]"}], 
       RowBox[{"3", " ", 
        SqrtBox["3"]}]], "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.726345494926827*^9, {3.726345582805047*^9, 3.7263455919687157`*^9}, {
   3.726345683671103*^9, 3.726345719242689*^9}, 3.72634681860806*^9, 
   3.726425960743842*^9, {3.726425995141766*^9, 3.7264259993365993`*^9}, 
   3.726426036983699*^9, 3.726426069575611*^9, 3.726426105885482*^9, 
   3.726426141965549*^9, 3.726426471056183*^9, 3.726428266032249*^9, 
   3.727012102638026*^9, 3.727012136085574*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Unit", "[", 
    RowBox[{
     RowBox[{"cob", "  ", ".", " ", "ener", ".", " ", 
      RowBox[{"ConjugateTranspose", "[", "cob", "]"}]}], " ", "t"}], "]"}], 
   "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.726345620068681*^9, 3.7263456313688517`*^9}, {
  3.726345662373685*^9, 3.726345677111211*^9}, {3.726346865729591*^9, 
  3.726346885132449*^9}, {3.726426492785963*^9, 3.7264265555008497`*^9}, {
  3.72642824535686*^9, 3.726428245548148*^9}, {3.726429286761877*^9, 
  3.7264292872048187`*^9}, {3.7264294862161913`*^9, 3.726429486346797*^9}, {
  3.7264296940989847`*^9, 3.726429733211747*^9}, {3.726429913845729*^9, 
  3.726429935580019*^9}, {3.727012069219702*^9, 3.727012081689785*^9}, {
  3.727012218720636*^9, 3.727012227698058*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", "0", "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0"},
     {"0", "0", "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
         RowBox[{
          SqrtBox["3"], " ", 
          RowBox[{"Sin", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", 
           FractionBox[
            RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
      "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.726345631822794*^9, {3.726345663895219*^9, 3.726345677533306*^9}, {
   3.7263468703685493`*^9, 3.7263468854164753`*^9}, {3.7264265100285892`*^9, 
   3.726426555881991*^9}, {3.726428245936034*^9, 3.7264282686820107`*^9}, 
   3.72642928788126*^9, 3.726429487075994*^9, {3.726429694373672*^9, 
   3.726429734975439*^9}, {3.7264299145562067`*^9, 3.7264299359900417`*^9}, 
   3.727012082977027*^9, 3.727012141142906*^9, 3.727012229393795*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Spin3", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "1", ",", "1", ",", "2", ",", "1", ",", "2", ",", "2", ",", 
      "3"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Spin3", ".", "H"}], " ", "-", " ", 
   RowBox[{"H", ".", "Spin3"}]}], " ", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.72642950122764*^9, 3.726429537810836*^9}, {
  3.726429575520309*^9, 3.7264295769825277`*^9}, {3.7264322514623337`*^9, 
  3.726432259829452*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.726429538120676*^9, 3.726429577338159*^9, {3.726432254907133*^9, 
   3.726432260092771*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"Energy", " ", "States", " ", "over", " ", "Time"}], 
   "                               ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}]}]], "Input",
 CellChangeTimes->{{3.726430083407174*^9, 3.726430090584701*^9}, 
   3.726432041126137*^9, {3.726687431851201*^9, 3.7266874334029617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
        RowBox[{
         SqrtBox["3"], " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "3"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<|100>\>\"", ",", "\"\<|010>\>\"", ",", "\"\<|001>\>\""}], 
     "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\"\<Coef\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.726429950574708*^9, 3.726429951085219*^9}, {
  3.726430108824676*^9, 3.726430179728355*^9}, {3.7264303272844477`*^9, 
  3.7264304103029222`*^9}, {3.726430441575941*^9, 3.7264304678807983`*^9}, {
  3.726430616011277*^9, 3.726430621666565*^9}, {3.7264306810734463`*^9, 
  3.726430755175433*^9}, {3.727012187907456*^9, 3.727012203525313*^9}, {
  3.7270122520369797`*^9, 3.727012331786085*^9}, {3.727012396334434*^9, 
  3.7270124411919003`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
v38x/P+/L/wfjqiyZA==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["t", TraditionalForm], 
       FormBox["\"Coef\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 3}, {-0.33333325538211456`, 0.9999999999999944}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"|100>\"", "\"|010>\"", "\"|001>\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.726430141964176*^9, 3.726430351264737*^9, {3.726430381816916*^9, 
   3.726430410975443*^9}, {3.7264304524486837`*^9, 3.7264304688738317`*^9}, 
   3.726430696756872*^9, 3.726430786215437*^9, {3.727012437677072*^9, 
   3.72701244513864*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"Multi", "-", 
    RowBox[{"Spin", " ", "Single", " ", "Chain"}]}], 
   "                               ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}]}]], "Input",
 CellChangeTimes->{{3.726432023012689*^9, 3.726432036564887*^9}, {
  3.72668737320953*^9, 3.726687420042753*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"H5", " ", "=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H", ",", "eye2"}], "]"}], "+", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"eye2", ",", "H"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U5", " ", "=", " ", 
   RowBox[{"Unit", "[", "H5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U5t", " ", "=", " ", 
   RowBox[{"Unit", "[", 
    RowBox[{"H5", " ", "t"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7264320569617653`*^9, 3.726432092045763*^9}, {
  3.726432286429494*^9, 3.726432298563306*^9}, {3.72643237397591*^9, 
  3.726432417478175*^9}, {3.7264342100166063`*^9, 3.726434220918675*^9}, {
  3.726434447080912*^9, 3.7264344503581867`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", "U5t", "]"}], "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.726432428491889*^9, 3.7264324508105307`*^9}, {
   3.7264324916511183`*^9, 3.726432510438426*^9}, {3.726432576894202*^9, 
   3.726432601480093*^9}, 3.726432634630273*^9, {3.726432707530974*^9, 
   3.726432720835236*^9}, {3.726434194043642*^9, 3.726434194241476*^9}, {
   3.726434413728795*^9, 3.726434426834746*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        SqrtBox[
         FractionBox["5", "3"]], " ", "\[Pi]", " ", 
        RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "-", 
      RowBox[{
       SqrtBox["5"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         SqrtBox[
          FractionBox["5", "3"]], " ", "\[Pi]", " ", 
         RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        SqrtBox[
         FractionBox["5", "3"]], " ", "\[Pi]", " ", 
        RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "+", 
      RowBox[{
       SqrtBox["5"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         SqrtBox[
          FractionBox["5", "3"]], " ", "\[Pi]", " ", 
         RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", "0",
    ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         SqrtBox[
          FractionBox["5", "3"]], " ", "\[Pi]", " ", 
         RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", "0",
    ",", "0", ",", "0", ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        SqrtBox[
         FractionBox["5", "3"]], " ", "\[Pi]", " ", 
        RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "-", 
      RowBox[{
       SqrtBox["5"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         SqrtBox[
          FractionBox["5", "3"]], " ", "\[Pi]", " ", 
         RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{
    FractionBox["1", "5"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        FractionBox["2", "3"], " ", 
        SqrtBox[
         FractionBox["5", "3"]], " ", "\[Pi]", " ", 
        RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "+", 
      RowBox[{
       SqrtBox["5"], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         FractionBox["2", "3"], " ", 
         SqrtBox[
          FractionBox["5", "3"]], " ", "\[Pi]", " ", 
         RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7264324380741043`*^9, 3.7264324513814793`*^9}, {
   3.726432501879695*^9, 3.726432505685156*^9}, {3.7264325778178673`*^9, 
   3.7264326351217327`*^9}, 3.726432754702795*^9, 3.726434215333107*^9, 
   3.726434427976942*^9, 3.726434474649446*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
        RowBox[{"5", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["3"]}]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "-", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "-", 
        RowBox[{"5", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["3"]}]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SqrtBox[
           FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}], "+", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}]}], 
       ")"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"3", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "-", 
        RowBox[{"5", " ", 
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["3"]}]], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "10"], " ", 
      RowBox[{"(", 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "-", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
        RowBox[{"5", " ", 
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "t"}], 
           RowBox[{"3", " ", 
            SqrtBox["3"]}]], "]"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<|00001>\>\"", ",", "\"\<|00010>\>\"", ",", "\"\<|00100>\>\"", ",", 
      "\"\<|01000>\>\"", ",", "\"\<|10000>\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\"\<Coef\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7264328772377567`*^9, {3.726432914448909*^9, 3.726432975601719*^9}, {
   3.726433017856969*^9, 3.7264331724770203`*^9}, {3.726433443234335*^9, 
   3.726433465948428*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
C4/G9FFYK/CTq1AYeRYba/b4BBNavQuYypxKJCI5D77sP82Ebn8yv8iXvCUv
q85KMZ9jQj9D3CUdmUTeLIt3PLhKnWe1cCUcTSZZp4Iv3HnMRO2f/D++Bamk
lfORrd1XJjRUeivlcPMjWX/D0tlQiRnzU70Grwvmkk072k9GqTGji7WR8+Mn
uUSDzkR1UJMZfQ7/lGdlyCN7fA/23d/LjAqWe1h3jOcR8zhlw3dmzCgp8cNB
q/orCambVGV4yozfpm7Q/zQoIMxb7/enTjFjunsNCdX+TnpmQo05v7BgaEvm
7cBN5SRm95brbd9Y8KYDnW2gQzk561fxNPUXCzpfMa+1zywnLfLMP082sWDN
SWmZYu0KUn3ScefLKRZKXznT64OV5OsHfdomJVb0/a95zZ6UKhJ6lX7waCgr
1rkLql59U0MMs1+yyESyYuTxmc+ZRTWEj3mb3FQcK37s2401XTXE/6WdWWg6
K37f7NTrLlVLPEp/V7SXs2KEkOznD89qif2GTx/tmdhQMKbtq8uNOqJy06Bq
Dycb/sfG3/rqaR0Zyh8eFuBjQ62EKV+vpDpiaSK3PluaDZOFly+8a68jZ7wC
XtDvZEOj/1gUpfTqyaFe27tBDmwY1aMXt8TeQPbflUve58yGm5YdnuXRGsge
wdaW2Xts+DBk9+A2rQayQ/fItv982bDja+DAhQsNRCledUougQ3ZmAqlrmU1
kPU6f2UaUtgwRvyNxkpZA5Gtjz7+OIMNXYSf0O3rbCBizHzvhwvY8NVGp+lx
tkbCeWnaOrOVDecz1kh/MWwkbMvJoVbdbGh7RjBt1LKRMD2/9EN0kA2fXDLz
qnZuJEtFDXL35tjw2H8MlokRjWRYPvvPfj52jDg5nf64rZH8zXPgXhBhx6ze
kzqbRxpJj6GS9jtpdlyzIaHfa6mRtHpEhPFsYsfE95doW8WaSFnPXcMmPXZs
FeRj8zRoIiWumu4+R9lR/bzstfvmTaRIYOyDthE7Ku3ypNEuN5G8fed4Xluw
o9XWYV4j9yaS1Sqy66QNO/5S+qz017+JZNyovsJsz45SU1f30cKbSHLcnl82
d9nRYN8n7bupTSRRe3Fe3IMdscOW/nV2E4mr+6hQ4cOOKT9PBVl9ayIvmdY9
2vyCHQV3bp5pqW8iL162feyJZMeJYwzZnn+aSLBGSFdIPDu699cr1/Y1Eb+L
rLiYzo4lNr0i+rNNxGeJ2KVks6PRmnVPnZabiGew86uz+ez41vvmh91MzeSh
snrZ2mJ2TM/KYUjiaCb3igb+fStnx4Tdl1nTeJuJi1nMhlt17Ohs80z3pFAz
uTVtaqL4mx2nOhv3PRNvJo6+/F4tnexY+tTZ/xqtmdjJl2X6/mXH2gMnU/rl
m4ltnkfPrjF2DPHp27So2EwsDXX4J2bYMU3RMPKtcjOxGJ7ZHbvEjgenLvhP
qjYTc4/39kaMHHjdyPNp/eZmYiphFcXKwYF3hxo0TmxtJsYZ0hXZvBwou1aa
31qrmZzQb1q6LMyBO6ya8oW2N5OjPQEbpaQ4MMBAteHMjmZStrGnzkyeA8O0
e5XUdzaTw9e17kUocWBi9ETOWwr/yvFRaFHjwDr29ZrFFD7A8KdKRIsD/aZj
j3hT+MdBdZdTOhzY5vjn4xjFpxvoIReylwPbSyMk/lH5ipoay+oOcmC04Jx2
4rZmsoe28Rb/cQ5U/3m+dEGzmeRb3ZM+YcyB2gbx90c1mgmkVpcEmHFgalAP
nydV39dZecdKCw50u/YK8qn6tXc5i6+x4UCOfUkFLyl/ch6VFulf40A1873G
4huaybZyKbsnNzmwwY4ub+e6ZvJJwFH41x0OtJlpTl+m/N9q9j2f7SEHvoxX
Wjon0UwyYkVs9R5z4OqPNNNLws1k89Blfk9/Duz0fxrEwddMVFz4LBkjOPCi
a0+8JkszSS64xLPnNQcyPYrn/bLaRDayZ2e5JVB+up+63j3fRBRfnOVc+UjV
z591lGewibxpT8/QzuFABxYuC4GuJrJOgcX8Tj4HsrFHxmQ1NxHZT8lp82Uc
GKrxdLytuIlI1C0YTfVy4P3M9dMhUU0kXPzIqvowB7Ibd0UEBDcR0QvRifaT
HKj0KYem6N1EhCb3L46scKCm882tag5NhJc3OPqvMCeqeaayvtZuIv6n+g8q
SHFi3cm3HJ4qTYQ7asfUJXlOHCuIn2elNREOlU7dbjVOdJXu2dZF30QY9VWG
2g5yokPiVsHR/Eby8NmDYInjnDjB/VQtK7WR0P2u0/nPmBPdit3ipCKp/WJz
J6DJghNt7yfZ5N9uJLNeJVtr73Di3Y7nnsbKjWTwm4VbSQon9lzbOvfrXgOR
Dmyy9c/gxMyTDXImlxqIoflRI8NcTjT76y9of7iBfJ3frtRRwokHgh38UKiB
BG1aWzfXzYl5O5WVLN/Uk52hREFBjAudbqsOtqXVEfuLW/lGaFwYcDd4QC6g
jrxRf7eUrsCFR7SVsmft6ghvWUj1rq1c6P2m6/nejXWkh87ujvFxLnQrdDN2
i6wlvrYSlY88ufAwW9m5L9dqSIFWUPZhPy78nTlVOKxXQ2aZ2OLWBlPPl4RJ
pEjXkHNRU86vXnMhM66ydZVXE426X7KZeVx4avOZO+vXVZM2ndu3eia5cL6o
ZVvrvUqisrZBcu9ZbpT68PI5q/5P0ufX9/D5JW5U/tHOeHighLzimOvvv8yN
h96sXex9VEK4mETSfZ258a7ERVz/pZgMzp7e3xDIjfQhK72Dcj9IfGubnU0R
N14LrXK5UFtIJBJ7ydMNazBZdGRVjvr+5oCZ861Ta9AsT3NfLnsUOO9WZPv0
bw0q3Gndn5b/Gvr2/vf+KT0P0j/S7VBYiYXCAwX/9vDwYI1/4Ov+u4ngcsLv
2VslHuQZzUoZKE6DoUvrvt86z4MtbglFBxazoczXSHFtJQ8O9vx4unDpB+iN
mM7JGvFi1fn+PWdK6yBSwL32vgkvukSu93kjVA/TO9+ltv7HiylJk/Td5+sh
2mfRKsSCF5WcF+6oz9fDP4WXTez2vHhhZN6eTb4Rki3assd9ePGDj/vvL07N
wNt01vVrPi/O3Ml8b8j2ByxXvUzEi3jxaYE4i9DxP5C3Pk3DuZgXcxQk/yWF
/gGbm3Qj6hVUvny6gcPr26GQ7/WZ+N+8KCeU/iGB1gE3jnTt8p3lxbPDG7K/
a3ZCU+FFelPltTgs6nJol343jO9uEburuhajGAc89G27gbXgmEb05rVo0qMz
seNxN2iSHVZ929aiyJduls/fuiE4l7fcUXctJoUX1cpu74FjGXkvnpivxapy
7pX7kr3wI15A7UvAWtTfVmoo/6sP/sj7HOx4tha3rnG2jejug5nYVQvG0LVo
EXhn8O9SH8jHDD4/+GotuuXVC7Go9sPDyPzF+rdr0VpoJn93YD/sCr1SPFq4
Fv8V/HR8dOQvZD4uMqfNrMWmB+MfwmIHIPFQqYjX/FoUu7vvO3f2AIRz1dSM
LK7F+oYjhgcqBsAtoH1/LgMfxhfdmOWZHwD9F/9UjHn5sM3g/L+uA4PQlaC2
+mQjH3Kr+jRYtw9CvY1W9qQKH2acvfdVaWIQSjbuun56Mx+ui2pvTWUYgpTU
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
pSDIs6cJPgTduW7gJITn4sKki8SbQK+c5rD+nhCqXX/g317ZCNf3XL5S9UQI
b5O2PYM7GqFUme6CfIIQkpyGt3kSDXCHXul4WZsQls03bLjAVwd9+zib1ndS
/FKsT19O18Lxx8NnH/QIYReH7w7xxlqQ50m9pjkkhI+PfvAYeFkLZRIaT6Pn
hbAf6M9Vb6wFqW27Km7wC6Np4vQq46kaeHxH2rhSSBjHmhMKUnVqYPIr3Z8N
YsJIvEpvxMnXQLHut5E/NGF0GNx82maqGuxPHuA+qCKMXb92G18KroZCuxP6
kgeF8Z3pv/rdPVWgnL6lzklfGF/PmKT7VlZByIyAWc0xYUxQ8D4im1sFl10b
L3sZCyNHUOPEpmdVIOBj9mTigjB+vSDUXby/Cu6V6/DrWwkjS6dEho1GFfzl
lY54YyuMVc4rN41lq+BLaGfSfw7CaMJw3F1mpRIs4y1/fb8njGI2Cj48zpVQ
9VfvBO2hMFp4qY7QmVTCDuUNLS6PhJFpM+cbr22VwPNxaEDVVxgfFd71NVys
gKx8e/bwMGFM83jr3u9VAbJMJwKnXwrjTc4slvtXKsBXb4vosWhh/GxDb5lk
UAHnK2YUmRKE8QZP+KdcyQrgaHU5YJchjGb3aQX5eeWg6fSW++lnYWS9xlR5
PaEczvM11aTmCCPX4wP28UHlkHVg65mJfGFU83DY5W5bDpaZYw43yoVRZMVb
mUYrh6DjUlrPq4RRtbSIk6wphy9D+kuZtRT/34u/m5fLQEA2yXOumdK/GFn8
oK0MCvwvRrj0CeNDRY7YpzFlMLzh2bmIAWHs16P1MzwvA5HvBevyhoUx35u+
ctSrDOwWpdKWJ4Xxyx2PdJVrZRAecuSm1KwwtqiP5T64UAbf1V13wIIwCvjl
eRw2KQMJ6+Yit1VhlLSWM9y9twwOMLL5vGYQwcHb+wyvbC+D65GaxwqZRfDa
hjYWLrUy+FX3rJmRSwSbYgX/S5Aqg9lrhZHyPCLoVWHS9VqoDGQ4Jy7o8ong
tOe5/jU8ZdT3ztFRTxER3HZRQnwXfRnEtbp+TBAXQcOcSfHVf6VQ6fTOuURK
BE88adqlNlMK//hadAZkRFDfp6OvaqwU1r9nY+RYJ4K8H7/c6BgsBYODWiVK
iiLol/ljv3lfKbj2XPI7vFEEy64sZB3sKoXE+8EnrqiIYMe5FfmYP6VQK/ZN
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
8IfhP77zJvn//yNA85ALTSl64T8ZicFB
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
J+B/5C6Mug==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUm3c81d8fx5E9cs245kXI5quUxnk3NKRClIRKihIliaSolD0aIpQKGRkl
ZTvIyr7XTLZ7r5EiIzJ/n99fHq/HOed93vPzuM/PvSj2V80vsLGwsGxhZ2H5
/9+Xd+05dR1CdpUutU88jojcVdkqb3JS/hLiaD903+yaK1qrLn0gL38LOa1M
x225exe9LAuT45APQrSuDfbdL8LRlZ0eLvNyL5Aa5dOGTc2vUOuS07MpuTTE
MF/gltbNRlw/hlR+yRUggWORZ8yoGL2pS3D7KfcNtd7l/34XtaDZmM9q/aHf
ELfB0/1aAS1ov2P9MO3fN7RdaHL2W1MLmlg3b1nYWodMTl9SKbOloq07jxoG
BTSgPv5w/7veNNSSvcymMtmMVlaucixmtiHfOg1j3TOtKK259E/ddBdK/Zin
/D6qFSU8qLPV2fwd0WL2rNvY0IrqmPJCFp7fkZKjVbHEtjZEflTe3rL4HdWt
89diEWlHXH4ZfbdWu5H4zh/CzdUdyJSUIHtmvgdlZQf9uKLVjay1R39sPz6A
xoXHQ43PdaOk37cTtroMIJWbxrtUn3WjpeenxbgCBtDrHXxvhv91o/JmhR0b
CgfQk2+hF62rfiBNPf+38zKD6OZwxJ8DNr0oLpwmadkziHL2T73dGNGLDqu6
8RvMDKLJNFOLdRW96DjnqdRhniHkdE0or1SlD/WMKxnGbRlC1itPfDbP9CHr
ob0RXmFDKIGv/oGQ0QDSBs5nUTrDaNfO2zZ+dgNIbmZId2bvMOpxVd886TmA
nLgWL4idHEYStBBmQ/oAsirx1nnnM4wex5gcCiQNIm722dHJymGkU7dMmd80
iOrkT9c7dQyjpqWMxQt7B1HF2TcJiSPDiPeMQMbem4PI/2XygC0PHT3Y2LR+
7ccgCvRrO9lziI4UTt4dcZkj4jyVbWFzio7KArXKetYPoWDuDGacEx0t/wx3
K9w9hETVgj9aPaIjj5xjbR4pQ+ht/YxXeSkdidLXMuhlQ8hmf2/GlgY6yhH7
8PB49xBaUX5w/tJ3OvrtRTLQFRhG86xXLnLO0JEjor6YuD6MDF5rOkgoMhDL
27+FP0KG0dBF1zFDLQaKYZfuqUsaRvplUa1S2xio9ttF2TQirrcq0eISRxlI
1WL57QVDOrIXdzk5d4OByr5QKi2O0xHD5t8Sx10GspI8wNh7hY7ePkWJrY8Y
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
//8jQGA0ybP3BOY/YqPlSQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
o8k3X6mxIKMiweizKg24YKgoykOTBWnoZRRpHGrArvJGb0/psCDfWg7jkMMN
WMFztlHwPAuS7DziJHGkAU9VhYxNmrCghtvG6xwEzuSUZiqzYEFDzwoZdIh8
u/8qxSJsCb0+nRHfVRvwrvRLalbOLOjKce3sWuUG/HN+1VTJgwVZabVbMxF6
ktWibzH7sKCcgAP1CfsasHmwQnSPPwt6m6c5HSzfgIW7Gt5lPmJB7akj4x3S
DbhXzKbZJ4IFXTWa6b4l3oBjnbZMnI0l/KJX6bxF+GVY9JxZLJEFCR/w/9u5
owGTmFQlFlJZ0Lscv9sRhN+t+h1Qk8WC6i/XOGQR8wh/7mwWm8eCLqngdam/
xLzGtt62L2JBelPvDRmXqHirUlrMkXIWlFaS+1pjkooDG/taBptZkMPJX6vz
X6n4OP+tyfedLGhg/K+VdQMV/7MisQb2saCUiIG4I2VU7LV+Wl1mnAXR6wqb
yKRSscvuj/kujKxo16l0Iz57Kt7rca71+DZWpLfIdXDMmIony6emeEms6Pc1
Ayb501RsYywhVSTKijTotxVv30XFl4Ii4rYcYUXGAU1VV3vqsVCH3IcOdVYU
L6lrN1VVj3vIdW1pp1mRx4BS6UxuPTb8+IdN6wIruhJsRu8aUI+1Rhx8o26w
IlWxM8qhUvX4pK9EtoYnKyo0qViK2l6Pj+/o712+w4oKLE/SSy3X4cOauqr/
hbKiW1EpPstVdVg2TWFBIp0VnbaZzrY1rcPbri7afehnRUqO56Zq3Gox65/s
WNtfrOidjeruQ0a1mDHmaq3gBCtSy+k30FOuxZvVXRJ3VliRbm+opsNKDZ6S
LPp+krQVvdM61xfgUYObhn0Ne05tRblYdjLKqhrX+ygHBJ/dilbbufNG1apx
Ne/M+6NGW9FRqq/mklA1LtGw4HxptRXp2uKx0+1VODv1eIO971aUPxs6snis
CoddYUEbeVvR/vOGGYVslfjscIQcmcyGWDqPTrluxbhJbrjTTJINsZ1eWLlY
Uoa13VTuJMiyIT857gtC18vwafrvrQIqbGi2uJhNvbMUH6fI3eTRJ84ftDxs
9qIEHzSrKWf1Z0Pupixqy/LFWLhzzWhhhA3Zlt/SGTb4gON36v5TnGJD5VLG
toeZP2BB6+QMl3k2xK9X3/G5qADzzZ/cmP7LhiYUvVfPiBVgLq7o5DH+beiw
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

         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["t", TraditionalForm], 
       FormBox["\"Coef\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-0.5687070699530256, 0.9999999999999393}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|00001>\"", "\"|00010>\"", "\"|00100>\"", "\"|01000>\"", 
       "\"|10000>\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.726433174671463*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "10"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "+", 
       RowBox[{"3", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SqrtBox[
           FractionBox["5", "3"]], " ", "\[Pi]", " ", "t"}], "]"}]}], "+", 
       RowBox[{"5", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], 
          RowBox[{"3", " ", 
           SqrtBox["3"]}]], "]"}]}]}], ")"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "44"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\"\<Coef\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7264332531385603`*^9, 3.7264333085819283`*^9}, {
  3.726433514542178*^9, 3.7264335156594057`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
z3EGSbR4N3I4engcIq/0r62jSWJfINejTbbjUHLczO2vqiRu1TW2EH0zBtsb
LV8v6UhiwK6HZcopIyCQk9pipS+J7Hrn67MlR0Dq/TLPvCGZT6j2+r7UYdB/
7BA5e0MSQ/RTT4kkDkHsHs+EsYeSOL9/g+KulwOgcD2qrMNXEhtMrik3yXSB
kjTlicprSVxnzmw1ta8TkKX/eEqQJL7fUuorvKkD6El8QS/DSPuNs117G1vh
7GrEdfxE8ufBu9D+pBHUaoE7IVES7Y/NdguYN8D56N4qnq+SOEzdddBbrx40
T+8Xn88g69l5ue308xrQCwhfH1sqiY4Z2bn6FqVwxUwplaNSEm8XeeKlx8Vg
KNdz0/G7JL47Hn90g2chmPTx1uk2kfsbGpfGfXPBXCQsfMuAJB6Tqu/fUpAI
FmsKmjbDktjdMFZ6Y0sc3G3o2jQ8JoksibvNrjlGgaXN3jt5s5L43aLeLz7a
BWyL38o/+CuJr19M1OoIRhN2b+Rnu9dJoYgnq67sgw/EU/PO6DMMUqibvNKl
8fIz4bR9D4vgFimskjm36Rr3N8J5MCvXj00KH6n0cvnppxKuaXoP/rJLYWZ9
fqbW83TC40pIWwu3FD6WHtVZ88omPEXlvGl7pRCq7h6Ju5lLeG/ogKT9Umjw
C+XuHiUIn2bb+b0CUhjiNiAvaJ5P+MXxfHhxSAoLw/xOvD1ZQPg/ydRbOiKF
tqfm/+2fKiACzl9mu3ZMCjWXfoxl/VdIBPH/Lqg9IYWn7nOY2cgVEcELwY8U
JKRQp95v/62aIiKkTObIR2kptArd0RWlXUyEhrR17ZSXQju3NXv5umIi/I6N
n7OSFC4o3PuhqVRCRCI3fZYihW2Njfs2R5YQ0TsyfukrS5HzkdrpvFhCxIzo
fCo/TeaPtGkdUyolYjN/GUqqSaF3zquXZk9LiQ/ebzii1aXQXcT9mGhiKRF3
VbqU7SLJ7/Jdj4dNpUS8WKvtk0tS2BTgtXJ7tpT4vOnxsbHLUrgaf0Lr4lop
kdjG1a9lQPL9+HmBGUMZkfQpLaDASAq5jx1LnvhXSnx1uHT6+HUpFDrQk8lH
7k+5sPQnxEwKs37MOVxoLiXSBIO+MN2WQq6tP16XJZcS1gvMZXl3pbBO7e6u
106lhFTxk55HllIYvLej8zO9lFh6PbMoYi2F2zXjOx3+lRBp14xZh2ylsMLz
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
//9FQM2JjuziSY6/DXVLow==
      "]]}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["t", TraditionalForm], 
    FormBox["\"Coef\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 44}, {-0.5982331458463674, 0.9999999999988209}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.726433268007085*^9, 3.726433308811602*^9}, 
   3.726433556078306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SqrtBox[
           FractionBox["5", "3"]], " ", "\[Pi]", " ", 
          RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "-", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", 
           RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SqrtBox[
           FractionBox["5", "3"]], " ", "\[Pi]", " ", 
          RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "+", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", 
           RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"4", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", 
           RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SqrtBox[
           FractionBox["5", "3"]], " ", "\[Pi]", " ", 
          RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "-", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", 
           RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}], ",", 
     "0", ",", "0", ",", "0", ",", 
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"Cos", "[", 
         RowBox[{
          FractionBox["2", "3"], " ", 
          SqrtBox[
           FractionBox["5", "3"]], " ", "\[Pi]", " ", 
          RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}], "+", 
        RowBox[{
         SqrtBox["5"], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["2", "3"], " ", 
           SqrtBox[
            FractionBox["5", "3"]], " ", "\[Pi]", " ", 
           RowBox[{"Conjugate", "[", "t", "]"}]}], "]"}]}]}], ")"}]}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<|00001>\>\"", ",", "\"\<|00010>\>\"", ",", "\"\<|00100>\>\"", ",", 
      "\"\<|01000>\>\"", ",", "\"\<|10000>\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\"\<Coef\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7264332958791323`*^9, 3.7264332964679117`*^9}, {
  3.7264342506497507`*^9, 3.726434311215774*^9}, {3.726434578999547*^9, 
  3.7264345859236794`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUm3c81d8fx5E9cs245kXI5quUxnk3NKRClIRKihIliaSolD0aIpQKGRkl
ZTvIyr7XTLZ7r5EiIzJ/n99fHq/HOed93vPzuM/PvSj2V80vsLGwsGxhZ2H5
/9+Xd+05dR1CdpUutU88jojcVdkqb3JS/hLiaD903+yaK1qrLn0gL38LOa1M
x225exe9LAuT45APQrSuDfbdL8LRlZ0eLvNyL5Aa5dOGTc2vUOuS07MpuTTE
MF/gltbNRlw/hlR+yRUggWORZ8yoGL2pS3D7KfcNtd7l/34XtaDZmM9q/aHf
ELfB0/1aAS1ov2P9MO3fN7RdaHL2W1MLmlg3b1nYWodMTl9SKbOloq07jxoG
BTSgPv5w/7veNNSSvcymMtmMVlaucixmtiHfOg1j3TOtKK259E/ddBdK/Zin
/D6qFSU8qLPV2fwd0WL2rNvY0IrqmPJCFp7fkZKjVbHEtjZEflTe3rL4HdWt
89diEWlHXH4ZfbdWu5H4zh/CzdUdyJSUIHtmvgdlZQf9uKLVjay1R39sPz6A
xoXHQ43PdaOk37cTtroMIJWbxrtUn3WjpeenxbgCBtDrHXxvhv91o/JmhR0b
CgfQk2+hF62rfiBNPf+38zKD6OZwxJ8DNr0oLpwmadkziHL2T73dGNGLDqu6
8RvMDKLJNFOLdRW96DjnqdRhniHkdE0or1SlD/WMKxnGbRlC1itPfDbP9CHr
ob0RXmFDKIGv/oGQ0QDSBs5nUTrDaNfO2zZ+dgNIbmZId2bvMOpxVd886TmA
nLgWL4idHEYStBBmQ/oAsirx1nnnM4wex5gcCiQNIm722dHJymGkU7dMmd80
iOrkT9c7dQyjpqWMxQt7B1HF2TcJiSPDiPeMQMbem4PI/2XygC0PHT3Y2LR+
7ccgCvRrO9lziI4UTt4dcZkj4jyVbWFzio7KArXKetYPoWDuDGacEx0t/wx3
K9w9hETVgj9aPaIjj5xjbR4pQ+ht/YxXeSkdidLXMuhlQ8hmf2/GlgY6yhH7
8PB49xBaUX5w/tJ3OvrtRTLQFRhG86xXLnLO0JEjor6YuD6MDF5rOkgoMhDL
27+FP0KG0dBF1zFDLQaKYZfuqUsaRvplUa1S2xio9ttF2TQirrcq0eISRxlI
1WL57QVDOrIXdzk5d4OByr5QKi2O0xHD5t8Sx10GspI8wNh7hY7ePkWJrY8Y
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
//8jQGA0ybP3BOY/YqPlSQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxFz2lI0wEYBvDZtGLOcFqmqdt/Ji7nkX4IMvJIg8yLTJcw6djUzfJKcWBq
ZabpEG3V8GQMNQ0RZ8YM7FimpnktdGXRjMQ5RFPQ1tKptQryfV94ePh9e14m
P+tsyg4SiRT9N/9adoO/0z+5Ioj0/wY0RFQCcTl42+ZB1W2CuAaW9VYyrAgx
OD1QlLHGqANrNlOlK4w28C7tLGuZ0QNuHJFnf2MMgxWdYm2672ewMHiibilH
B87Ue+qUigUwhVnC+np0BVxlO8puvGQA87Xxr8hjP8HZb0r4WawNcNdVapzj
6V+4pyBt0S+BFLLtYvlW7I8lCzBJMxPyIp8M9sgV5MWzrcBzxppz1i93giP0
V67fz94NjpmTeNHpFPBiP7/obYc12Jc25Rp20QZMCTbypg17wKeWuWtuHFvw
p75kC643DdxdPnCBMKIFVqIZtdoOnJRT0E2ttwcfFnqpo3h7we/svK1FAfvA
zxXFDd5kB3CBBfvM2Bc0ZTo/PFO5H6xvZUrlhY5g6SEnyx6OE1hSLxjiEQfA
XOl5NXUevX6yxSRXOYN1+tC8vjIXcFOgv/M4zxXcUSqiCX3o4DJOUiTZiD4y
3dhWNs4A13o2dIxHEuCbvZW1kT3oaGdOy4g7E3wicyiRJkbLXfjuY0a0e/+j
6phEN/zPp489qUILDJYTw+yDYH7Xd0J8F51eHLcVcQ8tilN+pD5AlxtFVZJq
tCLAtFkjQ5tem6da29GSSWrlwBC6vjkj9c4wujlXHRY+in7qINkYVaOnufap
mg9ols4pbFaH9lPm0x/q0cdKtaaUeXQUS/Z4YRGdk0bQV1fRhcdvmZ4Y0KU2
s+9zjejazuaK9XV0U5Gl8NkGuj02JbRwC610G3QN+o1WGTxMZjP6DwbEFmI=

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwUm3c81d8fx5E9cs245kXI5quUxnk3NKRClIRKihIliaSolD0aIpQKGRkl
ZTvIyr7XTLZ7r5EiIzJ/n99fHq/HOed93vPzuM/PvSj2V80vsLGwsGxhZ2H5
/9+Xd+05dR1CdpUutU88jojcVdkqb3JS/hLiaD903+yaK1qrLn0gL38LOa1M
x225exe9LAuT45APQrSuDfbdL8LRlZ0eLvNyL5Aa5dOGTc2vUOuS07MpuTTE
MF/gltbNRlw/hlR+yRUggWORZ8yoGL2pS3D7KfcNtd7l/34XtaDZmM9q/aHf
ELfB0/1aAS1ov2P9MO3fN7RdaHL2W1MLmlg3b1nYWodMTl9SKbOloq07jxoG
BTSgPv5w/7veNNSSvcymMtmMVlaucixmtiHfOg1j3TOtKK259E/ddBdK/Zin
/D6qFSU8qLPV2fwd0WL2rNvY0IrqmPJCFp7fkZKjVbHEtjZEflTe3rL4HdWt
89diEWlHXH4ZfbdWu5H4zh/CzdUdyJSUIHtmvgdlZQf9uKLVjay1R39sPz6A
xoXHQ43PdaOk37cTtroMIJWbxrtUn3WjpeenxbgCBtDrHXxvhv91o/JmhR0b
CgfQk2+hF62rfiBNPf+38zKD6OZwxJ8DNr0oLpwmadkziHL2T73dGNGLDqu6
8RvMDKLJNFOLdRW96DjnqdRhniHkdE0or1SlD/WMKxnGbRlC1itPfDbP9CHr
ob0RXmFDKIGv/oGQ0QDSBs5nUTrDaNfO2zZ+dgNIbmZId2bvMOpxVd886TmA
nLgWL4idHEYStBBmQ/oAsirx1nnnM4wex5gcCiQNIm722dHJymGkU7dMmd80
iOrkT9c7dQyjpqWMxQt7B1HF2TcJiSPDiPeMQMbem4PI/2XygC0PHT3Y2LR+
7ccgCvRrO9lziI4UTt4dcZkj4jyVbWFzio7KArXKetYPoWDuDGacEx0t/wx3
K9w9hETVgj9aPaIjj5xjbR4pQ+ht/YxXeSkdidLXMuhlQ8hmf2/GlgY6yhH7
8PB49xBaUX5w/tJ3OvrtRTLQFRhG86xXLnLO0JEjor6YuD6MDF5rOkgoMhDL
27+FP0KG0dBF1zFDLQaKYZfuqUsaRvplUa1S2xio9ttF2TQirrcq0eISRxlI
1WL57QVDOrIXdzk5d4OByr5QKi2O0xHD5t8Sx10GspI8wNh7hY7ePkWJrY8Y
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
//8jQGA0ybP3BOY/YqPlSQ==
         "]]}}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["t", TraditionalForm], 
       FormBox["\"Coef\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-0.5999999674945431, 0.9999999999998782}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"|00001>\"", "\"|00010>\"", "\"|00100>\"", "\"|01000>\"", 
       "\"|10000>\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1, 0.75, 0]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.726434295577257*^9, 3.726434312421685*^9}, 
   3.726434588621089*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "   ", 
   RowBox[{"Multi", "-", 
    RowBox[{"Spin", " ", "Full", " ", "Chain"}]}], 
   "                                 ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
  "(*", "                                                         ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}],
    "******)"}]}]], "Input",
 CellChangeTimes->{{3.726687458132189*^9, 3.7266874598245897`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"H52", " ", "=", " ", 
   RowBox[{
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"H", ",", "eye2"}], "]"}], "+", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"eye2", ",", "H"}], "]"}], "+", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{"eye", ",", 
      RowBox[{"KroneckerProduct", "[", 
       RowBox[{"H", ",", "eye"}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U52", " ", "=", " ", 
   RowBox[{"Unit", "[", "H52", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"U52t", " ", "=", " ", 
   RowBox[{"Unit", "[", 
    RowBox[{"H52", " ", "t"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.726687477324871*^9, 3.726687528258412*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.726688524517026*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.726688530231711*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConjugateTranspose", "[", "U52t", "]"}], "[", 
  RowBox[{"[", "5", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.726687571840262*^9}],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<|00001>\>\"", ",", "\"\<|00010>\>\"", ",", "\"\<|00100>\>\"", ",", 
      "\"\<|01000>\>\"", ",", "\"\<|10000>\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "\"\<Coef\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{3.7266875923870373`*^9}],

Cell[BoxData[GridBox[{
   {"0", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
    RowBox[{
     FractionBox["1", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "+", 
       RowBox[{
        SqrtBox["3"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
    "0", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}], "-", 
       RowBox[{
        SqrtBox["3"], " ", 
        RowBox[{"Sin", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]", " ", "t"}], "3"], "]"}]}]}], ")"}]}], 
    "0", "0", "0"}
  },
  GridBoxAlignment->{
   "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
    "RowsIndexed" -> {}},
  GridBoxSpacings->{"Columns" -> {
      Offset[0.27999999999999997`], {
       Offset[0.7]}, 
      Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
      Offset[0.2], {
       Offset[0.4]}, 
      Offset[0.2]}, "RowsIndexed" -> {}}]], "Input",
 CellChangeTimes->{{3.7270123575534153`*^9, 3.7270123590905027`*^9}}]
},
WindowSize->{808, 623},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 959, 22, 117, "Input"],
Cell[1520, 44, 335, 8, 32, "Input"],
Cell[1858, 54, 1215, 32, 138, "Input"],
Cell[CellGroupData[{
Cell[3098, 90, 666, 13, 54, "Input"],
Cell[3767, 105, 1146, 27, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4950, 137, 687, 17, 78, "Input"],
Cell[5640, 156, 1323, 33, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7000, 194, 258, 5, 32, "Input"],
Cell[7261, 201, 971, 24, 160, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8269, 230, 572, 10, 54, "Input"],
Cell[8844, 242, 850, 23, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9731, 270, 721, 15, 54, "Input"],
Cell[10455, 287, 1063, 26, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11555, 318, 283, 5, 32, "Input"],
Cell[11841, 325, 773, 21, 92, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12651, 351, 845, 17, 75, "Input"],
Cell[13499, 370, 2250, 51, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15786, 426, 663, 14, 54, "Input"],
Cell[16452, 442, 3821, 90, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20310, 537, 130, 2, 32, "Input"],
Cell[20443, 541, 569, 17, 79, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21049, 563, 285, 5, 32, "Input"],
Cell[21337, 570, 2171, 49, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23545, 624, 724, 16, 96, "Input"],
Cell[24272, 642, 513, 15, 49, "Output"],
Cell[24788, 659, 2634, 81, 189, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27459, 745, 403, 8, 32, "Input"],
Cell[27865, 755, 2467, 69, 209, "Output"]
}, Open  ]],
Cell[30347, 827, 1060, 31, 131, "Input"],
Cell[CellGroupData[{
Cell[31432, 862, 3192, 71, 247, "Input"],
Cell[34627, 935, 1658, 40, 181, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36322, 980, 565, 10, 32, "Input"],
Cell[36890, 992, 3009, 84, 209, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39936, 1081, 823, 15, 32, "Input"],
Cell[40762, 1098, 7767, 234, 209, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48566, 1337, 570, 14, 54, "Input"],
Cell[49139, 1353, 1044, 26, 149, "Output"]
}, Open  ]],
Cell[50198, 1382, 1000, 22, 117, "Input"],
Cell[CellGroupData[{
Cell[51223, 1408, 2051, 55, 188, "Input"],
Cell[53277, 1465, 41541, 751, 247, "Output"]
}, Open  ]],
Cell[94833, 2219, 989, 23, 117, "Input"],
Cell[95825, 2244, 766, 18, 75, "Input"],
Cell[CellGroupData[{
Cell[96616, 2266, 462, 8, 32, "Input"],
Cell[97081, 2276, 3234, 95, 301, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100352, 2376, 3851, 114, 445, "Input"],
Cell[104206, 2492, 136399, 2339, 242, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240642, 4836, 894, 26, 74, "Input"],
Cell[241539, 4864, 46338, 774, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287914, 5643, 3517, 102, 438, "Input"],
Cell[291434, 5747, 148299, 2561, 242, "Output"]
}, Open  ]],
Cell[439748, 8311, 943, 22, 117, "Input"],
Cell[CellGroupData[{
Cell[440716, 8337, 736, 20, 96, "Input"],
Cell[441455, 8359, 77, 1, 32, "Output"],
Cell[441535, 8362, 77, 1, 32, "Output"]
}, Open  ]],
Cell[441627, 8366, 167, 4, 32, "Input"],
Cell[441797, 8372, 573, 14, 96, "Input"],
Cell[442373, 8388, 1525, 47, 41, "Input"]
}
]
*)

